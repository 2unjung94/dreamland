<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dreamland.prj.mapper.MessageMapper">

  <select id="getEmployeeList"
          parameterType="map"
          resultType="EmployeeDto">
	SELECT E.EMP_NO, E.EMP_NAME, E.EMAIL, E.MOBILE, E.ROLE, D.DEPT_NO, D.DEPT_NAME, P.POS_NO, P.POS_NAME
	  FROM EMPLOYEE E
	  JOIN DEPARTMENT D ON E.DEPT_NO = D.DEPT_NO
	  JOIN POSITION P ON E.POS_NO = P.POS_NO
	 WHERE E.EMP_NAME LIKE '%' || #{value} || '%' OR D.DEPT_NAME LIKE '%' || #{value} || '%'
  </select>

  <insert id="sendMessage"
          parameterType="map">
    <selectKey order="BEFORE" keyProperty="msgNo" resultType="int">
      SELECT MSG_SEQ.NEXTVAL
        FROM DUAL
    </selectKey>
    INSERT INTO MESSAGE (
        MSG_NO
      , MSG_CONTENTS
      , READ_YN
      , DEL_YN
      , STAR_YN
      , MSG_CREATE_DT
      , MSG_SENDER
      , MSG_RECEIVER
    ) VALUES (
        #{msgNo}
      , #{contents}
      , 'N'
      , 'N'
      , 'N'
      , CURRENT_DATE
      , #{sender}
      , #{receiver}
    )  
  </insert>
  
  <select id="getMessageCountByReceiver">
		SELECT COUNT(*)
		  FROM MESSAGE M JOIN EMPLOYEE ES ON M.MSG_SENDER = ES.EMP_NO JOIN EMPLOYEE ER ON M.MSG_RECEIVER = ER.EMP_NO
		 WHERE M.MSG_RECEIVER = ${empNo}
  </select>

  <select id="getMessageByReceiver"
          parameterType="int"
          resultType="MessageDto">
		SELECT M.MSG_CONTENTS, M.READ_YN, M.DEL_YN, M.STAR_YN, M.MSG_CREATE_DT, M.MSG_SENDER, M.MSG_RECEIVER
		     , ES.EMP_NAME AS SENDER_NAME, ER.EMP_NAME AS RECEIVER_NAME
		  FROM MESSAGE M JOIN EMPLOYEE ES ON M.MSG_SENDER = ES.EMP_NO JOIN EMPLOYEE ER ON M.MSG_RECEIVER = ER.EMP_NO
		 WHERE M.MSG_RECEIVER = #{empNo}
  </select>
  
  <select id="getMessageCountBySender">
    SELECT COUNT(*)
      FROM MESSAGE M JOIN EMPLOYEE ES ON M.MSG_SENDER = ES.EMP_NO JOIN EMPLOYEE ER ON M.MSG_RECEIVER = ER.EMP_NO
     WHERE M.MSG_SENDER = #{empNo}
  </select>
  
  <select id="getMessageBySender"
          parameterType="int"
          resultType="MessageDto">
    SELECT M.MSG_CONTENTS, M.READ_YN, M.DEL_YN, M.STAR_YN, M.MSG_CREATE_DT, M.MSG_SENDER, M.MSG_RECEIVER
         , ES.EMP_NAME AS SENDER_NAME, ER.EMP_NAME AS RECEIVER_NAME
      FROM MESSAGE M JOIN EMPLOYEE ES ON M.MSG_SENDER = ES.EMP_NO JOIN EMPLOYEE ER ON M.MSG_RECEIVER = ER.EMP_NO
     WHERE M.MSG_SENDER = #{empNo}
  </select>
  
  <select id="getPosNameByPosNo"
          parameterType="int"
          resultType="String">
    SELECT POS_NAME
      FROM POSITION
     WHERE POS_NO = #{posNo}
  </select>
  
  <update id="updateUserInfo"
          parameterType="EmployeeDto">
    UPDATE EMPLOYEE
       SET EMP_NAME = #{empName}
         , BIRTH = #{birth}
         , MOBILE = #{mobile}
         , POSTCODE = #{postcode}
         , ADDRESS = #{address}
         , DETAIL_ADDRESS = #{detailAddress}
         , PROFILE_PATH = #{profilePath}
         , SIGN_PATH = #{signPath}
     WHERE EMAIL = #{email}
  </update>

  <update id="updatePassword"
          parameterType="String">
    UPDATE EMPLOYEE
       SET PASSWORD = #{changePw}
     WHERE EMAIL = #{email}
  </update>

</mapper>