<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.dreamland.prj.mapper.IndexMapper">
	
	<resultMap id="SkdMap" type="ScheduleDto">
	  <id property="skdNo" column="SKD_NO"/>
	  <result property="skdStart" column="SKD_START"/>
	  <result property="skdEnd" column="SKD_END"/>
	  <result property="skdCategory" column="SKD_CATEGORY"/>
	  <result property="skdTitle" column="SKD_TITLE"/>
	  <result property="skdContents" column="SKD_CONTENTS"/>
	  <result property="skdColor" column="SKD_COLOR"/>
	  <association property="employee" javaType="EmployeeDto">
	     <id property="empNo" column="EMP_NO"/>
	     <result property="empName" column="EMP_NAME"/>
	     <result property="deptNo" column="DEPT_NO"/>
	   </association>
	   <collection property="shrEmp" ofType="SkdShrEmpDto">
	     <result property="skdNo" column="SKD_NO"/>
	     <result property="empNo" column="EMP_NO"/>
	   </collection>
	   <collection property="shrDept" ofType="SkdShrDeptDto">
	      <result property="skdNo" column="SKD_NO"/>
	      <result property="deptNo" column="DEPT_NO"/>
	   </collection>
	</resultMap> 
	
	<!-- 부서 + 직원 전체 리스트 조회 -->
  <select id="getUser" resultType="EmployeeDto">
    SELECT E.EMP_NO, E.EMP_NAME, E.BIRTH, E.EMAIL, E.MOBILE, E.ROLE, E.PROFILE_PATH, D.DEPT_NO, D.DEPT_NAME, P.POS_NO, P.POS_NAME
      FROM EMPLOYEE E
      JOIN DEPARTMENT D ON E.DEPT_NO = D.DEPT_NO
      JOIN POSITION P ON E.POS_NO = P.POS_NO
     WHERE EMAIL = #{email}
  </select>


  <!-- 근태관리 -->
  <insert id="insertWork" parameterType="WorkDto">
    INSERT INTO WORK (
        WORK_NO
      , WORK_DATE
      , WORK_IN
      , WORK_OUT
      , WORK_TOTAL_TIME
      , WORK_STATE
      , LATE_YN
      , EMP_NO
    ) VALUES (
        WORK_SEQ.NEXTVAL
      , TO_DATE(TO_CHAR(CURRENT_DATE, 'YYYY-MM-DD'), 'YYYY-MM-DD')
      , TO_TIMESTAMP(TO_CHAR(CURRENT_TIMESTAMP, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS')
      , NULL
      , NULL
      , 10
      , 'N'
      , #{empNo}      
    )
  </insert>
  
  <update id="updateWorkOut" parameterType="map">
    UPDATE WORK
       SET WORK_OUT = TO_TIMESTAMP(TO_CHAR(CURRENT_TIMESTAMP, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS')
         , WORK_TOTAL_TIME = ROUND(EXTRACT(HOUR FROM (CURRENT_TIMESTAMP - WORK_IN)) + EXTRACT(MINUTE FROM (CURRENT_TIMESTAMP - WORK_IN)) / 60, 2)
     WHERE EMP_NO = #{empNo}
       AND WORK_DATE = TO_DATE(#{today}, 'YYYY-MM-DD')
       AND WORK_IN IS NOT NULL
       AND WORK_OUT IS NULL
  </update>
  
  <select id="hasCheckedWorkIn" parameterType="int" resultType="int">
    SELECT COUNT(*)
      FROM WORK
     WHERE EMP_NO = #{empNo}
       AND WORK_DATE = TO_DATE(TO_CHAR(CURRENT_DATE, 'YYYY-MM-DD'), 'YYYY-MM-DD')
  </select>
  
  <select id="hasCheckedWorkOut" parameterType="int" resultType="int">
    SELECT COUNT(*)
      FROM WORK
     WHERE EMP_NO = #{empNo}
       AND WORK_DATE = TO_DATE(TO_CHAR(CURRENT_DATE, 'YYYY-MM-DD'), 'YYYY-MM-DD')
       AND WORK_OUT IS NOT NULL
  </select>
  
  <update id="updateCheckedWorkOut">
    UPDATE WORK
       SET WORK_OUT = TO_TIMESTAMP(TO_CHAR(SYSDATE, 'YYYY-MM-DD') || ' 18:00:00', 'YYYY-MM-DD HH24:MI:SS')
         , WORK_TOTAL_TIME = ROUND(EXTRACT(HOUR FROM (TO_TIMESTAMP(TO_CHAR(SYSDATE, 'YYYY-MM-DD') || ' 18:00:00', 'YYYY-MM-DD HH24:MI:SS') - WORK_IN)) + 
                                   EXTRACT(MINUTE FROM (TO_TIMESTAMP(TO_CHAR(SYSDATE, 'YYYY-MM-DD') || ' 18:00:00', 'YYYY-MM-DD HH24:MI:SS') - WORK_IN)) / 60, 2)
     WHERE WORK_OUT IS NULL
  </update>
  
  
  <!-- 공지사항 리스트 -->
  <select id="getNoticeList" parameterType="NoticeBoardDto">
    SELECT ROW_NUMBER() OVER(ORDER BY 
      CASE WHEN SIGNAL = 1 THEN 0 ELSE 1 END, NOTICE_NO DESC)
         , NOTICE_NO, BOARD_TITLE, SIGNAL, BOARD_MODIFY_DT
      FROM NOTICE_BOARD
  </select>
  
  
  <!-- 안읽은 쪽지 건수 확인 -->
  <select id="getMessageCountByReceiver">
    SELECT COUNT(*)
      FROM MESSAGE M JOIN EMPLOYEE ES ON M.MSG_SENDER = ES.EMP_NO JOIN EMPLOYEE ER ON M.MSG_RECEIVER = ER.EMP_NO
     WHERE M.MSG_RECEIVER = ${empNo} AND READ_YN = 'N'
  </select>
  
  
  <!-- 승인 해야 할 대기 전자문서 -->
  <select id="getWaitCount">
	  SELECT COUNT(*)
	    FROM APPROVAL B
	   WHERE B.APV_NO IN (SELECT APV_NO
	                        FROM (SELECT APV_NO, WRITER_LIST, APV_STATE, EMP_NO,
	                                     ROW_NUMBER() OVER (PARTITION BY APV_NO, APV_STATE ORDER BY WRITER_LIST) as RN
	                                FROM APV_WRITER
	                               WHERE APV_STATE = 100)
	                       WHERE RN = 1 
	                         AND EMP_NO = #{empNo})
	     AND NOT B.APV_CHECK IN(2,3)
  </select>

	<!-- 진행중인 나의 전자문서 -->
	<select id="getMyApvCount">
	  SELECT COUNT(*)
	    FROM APPROVAL
	   WHERE EMP_NO = #{empNo}
	     AND APV_CHECK = 0
	</select>
	
	
	<!-- 진행중인 나의 일정 -->
	<!-- 
	<select id="getSkdList"
          parameterType="Map"
          resultMap="SkdMap">
     SELECT S.SKD_NO, S.SKD_START, S.SKD_END, S.SKD_CATEGORY, S.SKD_TITLE, S.SKD_CONTENTS, S.SKD_COLOR
          , E.EMP_NO, E.EMP_NAME, E.DEPT_NO
          , SSD.DEPT_NO AS SHARED_DEPT_NO
          , SSE.EMP_NO AS SHARED_EMP_NO
       FROM SCHEDULE S
      INNER JOIN EMPLOYEE E ON S.EMP_NO = E.EMP_NO
       LEFT JOIN SKD_SHR_DEPT SSD ON S.SKD_NO = SSD.SKD_NO
       LEFT JOIN SKD_SHR_EMP SSE ON S.SKD_NO = SSE.SKD_NO
      WHERE S.EMP_NO = #{empNo}      
         OR SSD.DEPT_NO = #{deptNo}  
         OR SSE.EMP_NO = #{empNo}        
  </select>
   -->

</mapper> 