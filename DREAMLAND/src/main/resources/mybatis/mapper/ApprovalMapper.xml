<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.dreamland.prj.mapper.ApprovalMapper">

   <resultMap type="ApprovalDto" id="ApprovalMap">
     <id     property="apvNo"    column="APV_NO" />
     <result property="empNo"       column="EMP_NO"/>
     <result property="apvWriteDate"    column="APV_WRITE_DATE"/>
     <result property="apvCheck"    column="APV_CHECK"/>
     <result property="apvKinds"    column="APV_KINDS"/>
     <result property="apvTitle"       column="APV_TITLE"/>
   </resultMap>

	 <select id="getApvNo"
	 				  resultType="int">
	 	SELECT MAX(APV_NO) 
	 	  FROM APPROVAL
	 </select>
	 
	 <select id="getEmployeeNo">
	 	SELECT EMP_NO 
	 	  FROM EMPLOYEE	
	 	 WHERE EMP_NAME = #{empName} 
	 </select>

	 <select id="getEmployeeName">
	 	SELECT EMP_NAME 
	 	  FROM EMPLOYEE	
	 	 WHERE EMP_NO = #{empNo} 
	 </select>
	 
	 <select id="getEmployeePosName">
	 	SELECT P.POS_NAME
	 	  FROM EMPLOYEE E	INNER JOIN POSITION P
	 	    ON E.POS_NO = P.POS_NO
	 	 WHERE E.EMP_NO = #{empNo} 
	 </select>
	 
	 	 <select id="getApprovers">
	 	SELECT APV_STATE
	 	  FROM APV_WRITER	
	 	 WHERE APV_NO = #{apvNo} 
  ORDER BY WRITER_LIST
	 </select>
	 
	 	 <select id="getApprover">
	 	SELECT EMP_NO 
	 	  FROM APV_WRITER	
	 	 WHERE APV_NO = #{apvNo} 
  ORDER BY WRITER_LIST
	 </select>
	 
	 <select id="getReferrer">
	 SELECT EMP_NO 
	   FROM APV_REF
	  WHERE APV_NO = #{apvNo} 
	 </select>
	 


   <insert id="insertApproval"
          parameterType="ApprovalDto">
    INSERT INTO APPROVAL (
        APV_NO
      , APV_TITLE 
      , EMP_NO
      , APV_WRITE_DATE
      , APV_KINDS
      , APV_CHECK
    ) VALUES (
        APV_SEQ.NEXTVAL
      , #{apvTitle}    
      , #{empNo}
      , CURRENT_DATE
      , #{apvKinds}
      , #{apvCheck}
    )
  </insert>
  
  <insert id="insertApvAttach"
          parameterType="ApvAttachDto">
    INSERT INTO APV_ATTACH (
        ATTACH_NO
      , UPLOAD_PATH 
      , FILESYSTEM_NAME
      , ORIGINAL_FILENAME
      , APV_NO
    ) VALUES (
        APV_ATTACH_SEQ.NEXTVAL
      , #{uploadPath}    
      , #{filesystemName}
      , #{originalFilename}
      , #{apvNo}
    )
  </insert>
  
  
  <insert id="insertApvWriter"
          parameterType="ApvWriterDto">
    INSERT INTO APV_WRITER (
        APV_NO
      , APV_STATE
      , WRITER_LIST
      , EMP_NO
    ) VALUES (
        #{apvNo}
      , 100
      , #{writerList}
      , #{empNo}
    )
  </insert>
  
  <insert id="insertApvRef">
  
 	 	INSERT INTO APV_REF (
    	    REF_NO
    	  , EMP_NO
   		  , APV_NO
  	  ) VALUES (
  	       REF_NO.NEXTVAL
  	    , #{empNo}
  	    , #{apvNo}
 	   )
 
 	</insert>

 
  <insert id="insertApvLetter"
          parameterType="AppletterDto">
    INSERT INTO APV_LETTER (
        LETTER_NO
      , APV_NO
      , DETAIL
    ) VALUES (
        LETTER_SEQ.NEXTVAL
      , #{apvNo}
      , #{detail}
    )
  </insert>
  
  
  <insert id="insertApvLeave"
          parameterType="AppleaveDto">
    INSERT INTO APV_LEAVE (
        LEAVE_NO
      , APV_NO
      , LEAVE_CLASSIFY
      , LEAVE_START
      , LEAVE_END
      , DETAIL
      , LEAVE_STATUS
      , HALFDAY
      , EMP_NO
      
    ) VALUES (
        LEAVE_SEQ.NEXTVAL
      , #{apvNo}
      , #{leaveClassify}
      , #{leaveStart}
      , #{leaveEnd}
      , #{detail}
      , 0
      , #{halfday}
      , #{empNo}
    )
  </insert>
  

  
  
  
  
  
  
  
  <select id="getApvCount">
    SELECT COUNT(*)
      FROM APPROVAL
     WHERE APV_NO IN (SELECT APV_NO 
              FROM APV_WRITER 
             WHERE EMP_NO = #{empNo}
       AND NOT APV_CHECK = 3 )
      
      
  </select>
  
    <select id="getWaitApvCount">
   SELECT count(*)
     FROM APPROVAL B
    WHERE B.APV_NO IN (SELECT APV_NO
                         FROM ( SELECT  APV_NO , WRITER_LIST, APV_STATE, EMP_NO,
                                        ROW_NUMBER() OVER (PARTITION BY APV_NO, APV_STATE ORDER BY WRITER_LIST) as rn
                                  FROM APV_WRITER
                                  WHERE APV_STATE = 100 )
                                 WHERE rn = 1
                                   AND EMP_NO = #{empNo})
          AND NOT B.APV_CHECK = 3 
  </select>
  
  
    <select id="getConfirmApvCount">
   SELECT count(*)
		 FROM APV_WRITER approver 
     JOIN ( SELECT APV_NO
              FROM APPROVAL
             WHERE APV_CHECK = 0
           ) approval
       ON approver.APV_NO = approval.APV_NO
    WHERE approver.APV_STATE = 200
      AND approver.EMP_NO = #{empNo}
  </select>
  
    <select id="getCompleteApvCount">
   SELECT count(*)
		 FROM APV_WRITER approver 
     JOIN ( SELECT APV_NO
              FROM APPROVAL
             WHERE APV_CHECK = 1
           ) approval
       ON approver.APV_NO = approval.APV_NO
    WHERE approver.EMP_NO = #{empNo}
  </select>
  
  
 <select id="getMyApvCount">
      SELECT COUNT(*)
        FROM approval
       WHERE EMP_NO = #{empNo}
         AND NOT APV_CHECK = 3
  </select>
  
   <select id="getMyWaitApvCount">
      SELECT COUNT(*)
        FROM approval
       WHERE EMP_NO = #{empNo}
         AND APV_CHECK = 0
  </select>
  
   <select id="getMyCompleApvCount">
      SELECT COUNT(*)
        FROM approval
       WHERE EMP_NO = #{empNo}
         AND APV_CHECK = 1
  </select>
  
   <select id="getMyRejectApvCount">
      SELECT COUNT(*)
        FROM approval
       WHERE EMP_NO = #{empNo}
         AND APV_CHECK = 2
  </select>
  
     <select id="getMyTempApvCount">
      SELECT COUNT(*)
        FROM approval
       WHERE EMP_NO = #{empNo}
         AND APV_CHECK = 3
  </select>


 <select id="getMyReferApvCount">
      SELECT COUNT(*)
        FROM approval
       WHERE APV_NO IN (SELECT APV_NO
       										FROM APV_REF
       									 WHERE EMP_NO = #{empNo})
       	AND NOT APV_CHECK = 3
  </select>
  
   <select id="getMyReferWaitApvCount">
      SELECT COUNT(*)
        FROM approval
       WHERE APV_NO IN (SELECT APV_NO
       										FROM APV_REF
       									 WHERE EMP_NO = #{empNo})
         AND APV_CHECK = 0
  </select>
  
   <select id="getMyReferCompleApvCount">
      SELECT COUNT(*)
        FROM approval
       WHERE APV_NO IN (SELECT APV_NO
       										FROM APV_REF
       									 WHERE EMP_NO = #{empNo})
         AND APV_CHECK = 1
  </select>
  
   <select id="getMyReferRejectApvCount">
      SELECT COUNT(*)
        FROM approval
       WHERE APV_NO IN (SELECT APV_NO
       										FROM APV_REF
       									 WHERE EMP_NO = #{empNo})
         AND APV_CHECK = 2
  </select>


  <select id="getApvList"
          parameterType="Map"
          resultMap="ApprovalMap">
    SELECT APV_NO, EMP_NO, APV_WRITE_DATE, APV_CHECK, APV_KINDS, APV_TITLE
      FROM (SELECT ROW_NUMBER() OVER (ORDER BY APV_NO ${sort}) AS RN
                 , APV_NO, EMP_NO, APV_WRITE_DATE, APV_CHECK, APV_KINDS, APV_TITLE 
              FROM APPROVAL
             WHERE APV_NO IN (SELECT APV_NO      
            									  FROM APV_WRITER
                               WHERE EMP_NO = #{empNo})
               AND NOT APV_CHECK IN (2,3) )
     WHERE RN BETWEEN #{begin} AND #{end}
  </select>
  
  
  <select id="getWaitApvList"
         parameterType="Map"
         resultMap="ApprovalMap">
    SELECT APV_NO, EMP_NO, APV_WRITE_DATE, APV_CHECK, APV_KINDS, APV_TITLE
      FROM (SELECT ROW_NUMBER() OVER (ORDER BY APV_NO DESC) AS RN
                 , APV_NO, EMP_NO, APV_WRITE_DATE, APV_CHECK, APV_KINDS, APV_TITLE 
              FROM( SELECT APV_NO, EMP_NO, APV_WRITE_DATE, APV_CHECK, APV_KINDS, APV_TITLE
                      FROM APPROVAL B
                     WHERE B.APV_NO IN (SELECT APV_NO
                                          FROM ( SELECT  APV_NO , WRITER_LIST, APV_STATE, EMP_NO,
                                                         ROW_NUMBER() OVER (PARTITION BY APV_NO, APV_STATE ORDER BY WRITER_LIST) as rn
                                                   FROM APV_WRITER
                                                    WHERE APV_STATE = 100 )
                                          WHERE rn = 1
                                            AND EMP_NO = #{empNo}))
             WHERE APV_CHECK = 0 )
     WHERE RN BETWEEN #{begin} AND #{end}
   </select>
   
   
  <select id="getConfirmApvList"
         parameterType="Map"
         resultMap="ApprovalMap">
SELECT APV_NO, EMP_NO, APV_WRITE_DATE, APV_CHECK, APV_KINDS, APV_TITLE      
  FROM (SELECT ROW_NUMBER() OVER (ORDER BY APV_NO DESC) AS RN
          ,  APV_NO, EMP_NO, APV_WRITE_DATE, APV_CHECK, APV_KINDS, APV_TITLE    
   FROM approval
  WHERE APV_NO IN (  SELECT approver.APV_NO
	          	    FROM APV_WRITER approver 
                    JOIN ( SELECT APV_NO
                             FROM APPROVAL
                            WHERE APV_CHECK = 0
                           ) approval
                      ON approver.APV_NO = approval.APV_NO
                   WHERE approver.APV_STATE = 200
                     AND approver.EMP_NO = #{empNo})) 
         WHERE RN BETWEEN #{begin} AND #{end}
  </select>
  
  
    <select id="getCompleteApvList"
         parameterType="Map"
         resultMap="ApprovalMap">
SELECT APV_NO, EMP_NO, APV_WRITE_DATE, APV_CHECK, APV_KINDS, APV_TITLE      
  FROM (SELECT ROW_NUMBER() OVER (ORDER BY APV_NO DESC) AS RN
          ,  APV_NO, EMP_NO, APV_WRITE_DATE, APV_CHECK, APV_KINDS, APV_TITLE    
   FROM approval
  WHERE APV_NO IN (  SELECT approver.APV_NO
	          	        FROM APV_WRITER approver 
                      JOIN ( SELECT APV_NO
                             FROM APPROVAL
                            WHERE APV_CHECK = 1
                            ) approval
                      ON approver.APV_NO = approval.APV_NO
                     AND approver.EMP_NO = #{empNo})) 
       WHERE RN BETWEEN #{begin} AND #{end}
  </select>
    
    
    <select id="getMyApvList"
    				parameterType="Map"
    				resultMap="ApprovalMap">
				SELECT APV_NO, EMP_NO, APV_WRITE_DATE, APV_CHECK, APV_KINDS, APV_TITLE      
          FROM (SELECT ROW_NUMBER() OVER (ORDER BY APV_NO DESC) AS RN
                ,  APV_NO, EMP_NO, APV_WRITE_DATE, APV_CHECK, APV_KINDS, APV_TITLE   
                  FROM approval
                 WHERE EMP_NO = #{empNo}
                   AND NOT APV_CHECK IN (2,3)     )
          WHERE RN BETWEEN #{begin} AND #{end}
    </select>
    
    <select id="getMyWaitApvList"
    				parameterType="Map"
    				resultMap="ApprovalMap">
				SELECT APV_NO, EMP_NO, APV_WRITE_DATE, APV_CHECK, APV_KINDS, APV_TITLE      
          FROM (SELECT ROW_NUMBER() OVER (ORDER BY APV_NO DESC) AS RN
                ,  APV_NO, EMP_NO, APV_WRITE_DATE, APV_CHECK, APV_KINDS, APV_TITLE   
                  FROM approval
                 WHERE EMP_NO = #{empNo}
                 	 AND APV_CHECK = 0)
          WHERE RN BETWEEN #{begin} AND #{end}
    </select>
    
     <select id="getMyCompleteApvList"
    				parameterType="Map"
    				resultMap="ApprovalMap">
				SELECT APV_NO, EMP_NO, APV_WRITE_DATE, APV_CHECK, APV_KINDS, APV_TITLE      
          FROM (SELECT ROW_NUMBER() OVER (ORDER BY APV_NO DESC) AS RN
                ,  APV_NO, EMP_NO, APV_WRITE_DATE, APV_CHECK, APV_KINDS, APV_TITLE   
                  FROM approval
                 WHERE EMP_NO = #{empNo}
                 	 AND APV_CHECK = 1)
          WHERE RN BETWEEN #{begin} AND #{end}
    </select>
    
     <select id="getMyRejectedApvList"
    				parameterType="Map"
    				resultMap="ApprovalMap">
				SELECT APV_NO, EMP_NO, APV_WRITE_DATE, APV_CHECK, APV_KINDS, APV_TITLE      
          FROM (SELECT ROW_NUMBER() OVER (ORDER BY APV_NO DESC) AS RN
                ,  APV_NO, EMP_NO, APV_WRITE_DATE, APV_CHECK, APV_KINDS, APV_TITLE   
                  FROM approval
                 WHERE EMP_NO = #{empNo}
                 	 AND APV_CHECK = 2)
          WHERE RN BETWEEN #{begin} AND #{end}
    </select>
    
         <select id="getMyTempApvList"
    				parameterType="Map"
    				resultMap="ApprovalMap">
				SELECT APV_NO, EMP_NO, APV_WRITE_DATE, APV_CHECK, APV_KINDS, APV_TITLE      
          FROM (SELECT ROW_NUMBER() OVER (ORDER BY APV_NO DESC) AS RN
                ,  APV_NO, EMP_NO, APV_WRITE_DATE, APV_CHECK, APV_KINDS, APV_TITLE   
                  FROM approval
                 WHERE EMP_NO = #{empNo}
                 	 AND APV_CHECK = 3)
          WHERE RN BETWEEN #{begin} AND #{end}
    </select>
    
    
       <select id="getMyReferApvList"
    				parameterType="Map"
    				resultMap="ApprovalMap">
				SELECT APV_NO, EMP_NO, APV_WRITE_DATE, APV_CHECK, APV_KINDS, APV_TITLE      
          FROM (SELECT ROW_NUMBER() OVER (ORDER BY APV_NO DESC) AS RN
                ,  APV_NO, EMP_NO, APV_WRITE_DATE, APV_CHECK, APV_KINDS, APV_TITLE   
                  FROM approval
                 WHERE APV_NO IN (SELECT APV_NO
       										          FROM APV_REF
       									           WHERE EMP_NO = #{empNo})
       		       AND NOT APV_CHECK IN (2,3) )
          WHERE RN BETWEEN #{begin} AND #{end}
    </select>
    
    <select id="getMyReferWaitApvList"
    				parameterType="Map"
    				resultMap="ApprovalMap">
				SELECT APV_NO, EMP_NO, APV_WRITE_DATE, APV_CHECK, APV_KINDS, APV_TITLE      
          FROM (SELECT ROW_NUMBER() OVER (ORDER BY APV_NO DESC) AS RN
                ,  APV_NO, EMP_NO, APV_WRITE_DATE, APV_CHECK, APV_KINDS, APV_TITLE   
                  FROM approval
                 WHERE APV_NO IN (SELECT APV_NO
       										          FROM APV_REF
       									           WHERE EMP_NO = #{empNo})
                 	 AND APV_CHECK = 0)
          WHERE RN BETWEEN #{begin} AND #{end}
    </select>
    
     <select id="getMyReferCompleteApvList"
    				parameterType="Map"
    				resultMap="ApprovalMap">
				SELECT APV_NO, EMP_NO, APV_WRITE_DATE, APV_CHECK, APV_KINDS, APV_TITLE      
          FROM (SELECT ROW_NUMBER() OVER (ORDER BY APV_NO DESC) AS RN
                ,  APV_NO, EMP_NO, APV_WRITE_DATE, APV_CHECK, APV_KINDS, APV_TITLE   
                  FROM approval
                 WHERE APV_NO IN (SELECT APV_NO
       										          FROM APV_REF
       									           WHERE EMP_NO = #{empNo})
                 	 AND APV_CHECK = 1)
          WHERE RN BETWEEN #{begin} AND #{end}
    </select>
    
    
     <select id="getMyReferRejectedApvList"
    				parameterType="Map"
    				resultMap="ApprovalMap">
				SELECT APV_NO, EMP_NO, APV_WRITE_DATE, APV_CHECK, APV_KINDS, APV_TITLE      
          FROM (SELECT ROW_NUMBER() OVER (ORDER BY APV_NO DESC) AS RN
                ,  APV_NO, EMP_NO, APV_WRITE_DATE, APV_CHECK, APV_KINDS, APV_TITLE   
                  FROM approval
                 WHERE APV_NO IN (SELECT APV_NO
       										          FROM APV_REF
       									           WHERE EMP_NO = #{empNo})
                 	 AND APV_CHECK = 2)
          WHERE RN BETWEEN #{begin} AND #{end}
    </select>
    
    
    
    
        <select id="getApvDetailByNo"
         parameterType="Int"
         resultType="ApprovalDto">
    SELECT APV_NO, EMP_NO, APV_WRITE_DATE, APV_CHECK, APV_KINDS, APV_TITLE    
      FROM approval
     WHERE APV_NO = #{apvNo}
    </select>
 
    
      <select id="getApvAppDetailByNo"
         parameterType="Int"
         resultType="AppletterDto">
    SELECT LETTER_NO, APV_NO, DETAIL, LETTER_STATUS, ORI_FILENAME, RER_FILENAME
      FROM APV_LETTER
     WHERE APV_NO = #{apvNo}
    </select>
    
    <select id="getApvLeaveDetailByNo"
         parameterType="Int"
         resultType="AppleaveDto">
    SELECT LEAVE_NO, APV_NO, LEAVE_CLASSIFY, LEAVE_START, LEAVE_END, DETAIL, LEAVE_STATUS, HALFDAY, EMP_NO
      FROM APV_LEAVE
     WHERE APV_NO = #{apvNo}
    </select>
    
    <update id="updateApprover">
    UPDATE APV_WRITER
       SET APV_STATE = 200,
           RETURN_REASON = #{returnReason}
     WHERE APV_NO = #{apvNo}
       AND EMP_NO = #{empNo}
    </update>
    
    <update id="updateApproval">
    UPDATE approval
       SET APV_CHECK = #{state}
     WHERE APV_NO = #{apvNo}
    </update>
    
      <update id="updateApvLeave">
  	UPDATE APV_LEAVE
  	   SET LEAVE_STATUS = 1
  	 WHERE APV_NO = #{apvNo}
  </update>
  
      <update id="updateEmployee">
  	UPDATE EMPLOYEE
  	   SET USED_DAY_OFF = USED_DAY_OFF + #{useDay}
  	 WHERE EMP_NO = #{empNo}
  </update>
  
      <update id="modifyApproval"
      				parameterType="ApprovalDto">
    UPDATE APPROVAL
       SET APV_CHECK = #{apvCheck}
         , APV_KINDS = #{apvKinds}
         , APV_TITLE = #{apvTitle}
     WHERE APV_NO = #{apvNo}
    </update>
    
  
   
   <update id="modifyApvLetter">
   	 UPDATE APV_LETTER
       SET DETAIL = #{detail}
     WHERE APV_NO = #{apvNo}
   </update>
   
     <update id="modifyApvLeave"
             parameterType="AppleaveDto" >
   	 UPDATE APV_LEAVE
       SET LEAVE_CLASSIFY = #{leaveClassify}
          , LEAVE_START =#{leaveStart}
          , LEAVE_END = #{leaveEnd}
          , DETAIL = #{detail}
     WHERE APV_NO = #{apvNo}
   </update>
   
   <delete id="deleteApvRef">
  DELETE FROM APV_REF
				WHERE APV_NO = #{apvNo}
  </delete>
  
   <delete id="deleteApvWriter">
  DELETE FROM APV_WRITER
				WHERE APV_NO = #{apvNo}
  </delete>
    
    <select id="getReturnApprover"
            parameterType="Int"
            resultType="ApvWriterDto">
       SELECT EMP_NO, RETURN_REASON
         FROM APV_WRITER 
        WHERE APV_NO = #{apvNo}
          AND NOT RETURN_REASON = '0'
    </select>
    
    <select id="getAttachList"
          resultType="ApvAttachDto">
      SELECT ATTACH_NO, UPLOAD_PATH, FILESYSTEM_NAME, ORIGINAL_FILENAME 
        FROM APV_ATTACH
       WHERE APV_NO = #{apvNo}
    </select>
    
    <select id="getAttachByNo"
          resultType="ApvAttachDto">
      SELECT ATTACH_NO, UPLOAD_PATH, FILESYSTEM_NAME, ORIGINAL_FILENAME 
        FROM APV_ATTACH
       WHERE ATTACH_NO = #{attachNo}
    </select>
    				
    <delete id="deleteAttach">
  DELETE FROM APV_ATTACH
				WHERE APV_NO = #{apvNo}
				  AND ATTACH_NO = #{attachNo}
    </delete>
    
    <delete id="deleteApp">
  DELETE FROM APPROVAL
				WHERE APV_NO = #{apvNo}
    </delete>
    
   <update id="revokeApproval">
    UPDATE APPROVAL
       SET APV_CHECK = 3
     WHERE APV_NO = #{apvNo}
    </update>
    				
    <update id="revokeApvLeave">
    UPDATE APV_LEAVE
       SET LEAVE_STATUS = 0
     WHERE APV_NO = #{apvNo}
    </update>
    
   <select id="getEmployeeList"
    	  resultType="EmployeeDto">
	 	SELECT EMP_NO, EMP_NAME, DEPT_NO, POS_NO
	 	  FROM EMPLOYEE	
	 </select>
	 
	 <select id="getDepartmentList"
	 			resultType="DepartmentDto">
	 			SELECT DEPT_NO, DEPT_NAME
	 			  FROM DEPARTMENT
	 			 WHERE DEPT_NO NOT BETWEEN 5001 AND 5999
                    AND NOT DEPT_NO = 4000
	  </select>
  
</mapper>