<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.dreamland.prj.mapper.DepartMapper">
<!-- <resultMap type="DepartmentDto" id="DepartmentMap">
  <id     property="deptNo"   column="DEPT_NO" />
  <result property="deptName" column="DEPT_NAME"/>
  <result property="depth"    column="DEPTH"/>
  <result property="parentId" column="PARENT_ID"/>
  <result property="treeText" column="TREE_TEXT"/>
  <association property="employee"  javaType="EmployeeDto">
     <id     property="empNo"     column="EMP_NO"/>
     <result property="empName"   column="EMP_NAME"/>
     <result property="birth"     column="BIRTH"/>
     <result property="enterDate" column="ENTER_DATE"/>
     <result property="resignDate" column="RESIGN_DATE"/>
     <result property="email"     column="EMAIL"/>
     <result property="mobile"    column="MOBILE"/>
     <result property="posNo"     column="POS_NO"/>
     <result property="role"      column="ROLE"/>
   </association>
</resultMap> -->
 <resultMap type="JsTreeDto" id="DepartmentMap">
  <id property="deptNo" column="DEPT_NO" />
  <result property="deptName" column="DEPT_NAME"/>
  <result property="depth" column="DEPTH"/>
  <result property="parentId" column="PARENT_ID"/>
  <result property="treeText" column="TREE_TEXT"/>
  <collection property="employee" ofType="EmployeeDto">
     <id property="empNo" column="EMP_NO"/>
     <result property="empName" column="EMP_NAME"/>
     <result property="birth" column="BIRTH"/>
     <result property="enterDate" column="ENTER_DATE"/>
     <result property="resignDate" column="RESIGN_DATE"/>
     <result property="email" column="EMAIL"/>
     <result property="mobile" column="MOBILE"/>
     <result property="posNo" column="POS_NO"/>
     <result property="role" column="ROLE"/>
     <result property="deptNo" column="DEPT_NO" />
     <result property="deptName" column="DEPT_NAME"/>
     <result property="posName" column="POS_NAME"/>
   </collection>
</resultMap>

  <!-- 부서 + 직원 전체 리스트 조회 -->
  <select id="getDepartList"
         resultMap="DepartmentMap">    
    SELECT D.DEPT_NO, D.DEPT_NAME, D.DEPTH, D.PARENT_ID, D.TREE_TEXT,
           E.EMP_NO, E.EMP_NAME, E.BIRTH, E.ENTER_DATE, E.EMAIL, E.RESIGN_DATE, E.MOBILE, E.ROLE, E.POS_NO, LEVEL
      FROM DEPARTMENT D
      LEFT JOIN EMPLOYEE E ON D.DEPT_NO = E.DEPT_NO
     START WITH D.PARENT_ID = '#'
   CONNECT BY PRIOR CAST(D.DEPT_NO AS VARCHAR2(20)) = D.PARENT_ID
  </select>
  
  <!-- 부서 + 직원 전체 리스트 조회 유저 -->
  <select id="getDepartListUser"
         resultType="OrgChartDto">    
    SELECT D.DEPT_NO, D.DEPT_NAME, D.DEPTH, D.PARENT_ID, D.TREE_TEXT,
           E.EMP_NO, E.EMP_NAME, E.BIRTH, E.ENTER_DATE, E.EMAIL, E.RESIGN_DATE, E.MOBILE, E.ROLE, E.POS_NO
      FROM DEPARTMENT D
      LEFT JOIN EMPLOYEE E ON D.DEPT_NO = E.DEPT_NO 
     WHERE E.RESIGN_DATE IS NULL AND D.PARENT_ID IS NOT NULL
  </select>
  	
	
	<!-- 부서 및 직원 삭제 -->
	<delete id="deleteDepart" parameterType="DepartmentDto">
    DELETE
      FROM DEPARTMENT
     WHERE DEPT_NO = #{deptNo}       
	</delete>
		
	<update id="deleteEmployee" parameterType="EmployeeDto">
    UPDATE EMPLOYEE
       SET RESIGN_DATE = CURRENT_DATE, DEPT_NO = 4000
     WHERE EMP_NO = #{empNo}     
  </update>
  
  <select id="hasEmployee" resultType="int">
    SELECT COUNT(*) 
      FROM EMPLOYEE 
     WHERE DEPT_NO = #{deptNo} AND RESIGN_DATE IS NULL
  </select>
  
  
  <!-- 부서 및 직원 정보 조회 -->
  <select id="getDepartById" resultType="DepartmentDto">
    SELECT DEPT_NO, DEPT_NAME, PARENT_ID
      FROM DEPARTMENT
     WHERE DEPT_NO = #{deptNo}
  </select>
  
  <select id="getEmployeeById" resultType="EmployeeDto">
    SELECT E.EMP_NO, E.EMP_NAME, E.BIRTH, E.ENTER_DATE, E.EMAIL, E.MOBILE, E.ROLE, D.DEPT_NO, D.DEPT_NAME, P.POS_NO, P.POS_NAME
      FROM EMPLOYEE E
      JOIN DEPARTMENT D ON E.DEPT_NO = D.DEPT_NO
      JOIN POSITION P ON E.POS_NO = P.POS_NO
     WHERE EMP_NO = #{empNo}
  </select>
  
  
  <!-- 부서 및 직원 정보 수정 -->
  <update id="updateDepart" parameterType="DepartmentDto">
    UPDATE DEPARTMENT 
       SET DEPT_NAME = #{deptName}, PARENT_ID = #{parentId}, TREE_TEXT = #{deptName}
     WHERE DEPT_NO = #{deptNo}
  </update>
  
  <update id="updateEmployee" parameterType="EmployeeDto">
    UPDATE EMPLOYEE
       SET EMP_NAME = #{empName}, EMAIL = #{email}, MOBILE = #{mobile}, ROLE = #{role}, DEPT_NO = #{deptNo}, POS_NO = #{posNo}
     WHERE EMP_NO = #{empNo}
  </update>
  
  
  <!-- 부서 추가 -->
  <select id="getAllDepart" resultType="DepartmentDto">
    SELECT DEPT_NO, DEPT_NAME, PARENT_ID
      FROM DEPARTMENT
     WHERE PARENT_ID IS NOT NULL
  </select>
  
  <insert id="insertDepart" parameterType="DepartmentDto">
    INSERT INTO DEPARTMENT(
        DEPT_NO
      , DEPT_NAME
      , DEPTH
      , PARENT_ID
      , TREE_TEXT
    ) VALUES (
        #{deptNo}
      , #{deptName}
      , 1
      , #{parentId}
      , #{deptName}
    ) 
  </insert>
  

</mapper> 